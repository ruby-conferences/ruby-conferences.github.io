name: Fetch Meetups

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Runs every day at 00:00 UTC time

permissions:
  pull-requests: write
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby

        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Check for new Meetups
        run: bundle exec rake fetch_meetups

      - name: Verify Meetups Data
        run: bundle exec rake verify_meetups

      - name: Set up the formatted date and branch name
        run: |
          echo "FORMATTED_DATE=$(date +'%B %d, %Y')" >> $GITHUB_ENV
          echo "BRANCH_TO_MERGE=new-meetups-$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Commit New Meetups
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          # Optional. Commit message for the created commit.
          # Defaults to "Apply automatic changes"
          commit_message: New Meetups on ${{ env.FORMATTED_DATE }}

          # Optional. Local and remote branch name where commit is going to be pushed
          #  to. Defaults to the current branch.
          #  You might need to set `create_branch: true` if the branch does not exist.
          branch: ${{ env.BRANCH_TO_MERGE }}

          # Optional. Options used by `git-commit`.
          # See https://git-scm.com/docs/git-commit#_options
          # commit_options: '--no-verify --signoff'

          # Optional glob pattern of files which should be added to the commit
          # Defaults to all (.)
          # See the `pathspec`-documentation for git
          # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
          # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
          file_pattern: '_data/*.yml'

          # Optional. Local file path to the repository.
          # Defaults to the root of the repository.
          # repository: .

          # Optional commit user and author settings
          # commit_user_name: My GitHub Actions Bot # defaults to "github-actions[bot]"
          # commit_user_email: my-github-actions-bot@example.org # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
          # commit_author: Author <actions@github.com> # defaults to "username <username@users.noreply.github.com>", where "username" belongs to the author of the commit that triggered the run

          # Optional. Tag name being created in the local repository and
          # pushed to remote repository and defined branch.
          # tagging_message: 'v1.0.0'

          # Optional. Option used by `git-status` to determine if the repository is
          # dirty. See https://git-scm.com/docs/git-status#_options
          status_options: '--untracked-files=no'

          # Optional. Options used by `git-add`.
          # See https://git-scm.com/docs/git-add#_options
          # add_options: '-u'

          # Optional. Options used by `git-push`.
          # See https://git-scm.com/docs/git-push#_options
          # push_options: '--force'

          # Optional. Disable dirty check and always try to create a commit and push
          # skip_dirty_check: true

          # Optional. Skip internal call to `git fetch`
          # skip_fetch: true

          # Optional. Skip internal call to `git checkout`
          # skip_checkout: true

          # Optional. Prevents the shell from expanding filenames.
          # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
          # disable_globbing: true

          # Optional. Create given branch name in local and remote repository.
          create_branch: true

      - name: Create Pull Request
        run: gh pr create -B main -H ${{ env.BRANCH_TO_MERGE }} --title "New Meetups on ${{ env.FORMATTED_DATE }}" --body "Newly added Meetups on ${{ env.FORMATTED_DATE }}."
